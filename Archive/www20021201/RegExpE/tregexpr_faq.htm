<html><head><meta name="generator" content="Help & Manual 2.6.3"><title>FAQ</title></head>
<body background="niceblue.gif" bgcolor="#FFFFFF">
<small><table width="100%"><tr><td align="right"><a href="tregexpr_decorator.htm"><img src="1arrow4.gif" border="0"></a><a href="tregexpr_author.htm"><img src="1arrow5.gif" border="0"></a></td></tr></small><table width="100%" border="0" cellspacing="0" cellpadding="3" bgcolor="#C6E7FF"><tr><td align="left">
<font face="Arial" size="4" color="#000000"><font face="Arial" size="4" color="#0000FF"><b>FAQ</b></font><font face="Arial" size="5" color="#000000"><font face="Arial" size="5" color="#0000FF"><b>
<br>
</b></font></font></font>

</td></tr></table><br>

<font face="Arial" size="3" color="#000000">Q.
<br>
<b>How can I use TRegExpr with Borland C++ Builder?</b>
<br>
I have a problem since no header file (.h or .hpp) is available.
<br>
A.
<br>
<table border="0" cellpadding="0" cellspacing="0"><tr valign="top"><td width="14"><font face="Arial" size="3" color="#000000"><font face="Symbol" size="2" color="#000000">&#183;</font></font></td><td><font face="Arial" size="3" color="#000000"> Add RegExpr.pas to bcb project.
&nbsp;<br>
</font></td></tr><tr valign="top"><td><font face="Arial" size="3" color="#000000"><font face="Symbol" size="2" color="#000000">&#183;</font></font></td><td><font face="Arial" size="3" color="#000000"> Compile project. This generates the header file RegExpr.hpp.
&nbsp;<br>
</font></td></tr><tr valign="top"><td><font face="Arial" size="3" color="#000000"><font face="Symbol" size="2" color="#000000">&#183;</font></font></td><td><font face="Arial" size="3" color="#000000"> Now one can write code which uses the RegExpr unit.
&nbsp;<br>
</font></td></tr><tr valign="top"><td><font face="Arial" size="3" color="#000000"><font face="Symbol" size="2" color="#000000">&#183;</font></font></td><td><font face="Arial" size="3" color="#000000"> Dont forget to add  #include "RegExpr.hpp" where needed.
&nbsp;<br>
</font></td></tr><tr valign="top"><td><font face="Arial" size="3" color="#000000"></font></td><td></td></tr></table><font face="Arial" size="3" color="#000000">
<br>
Q.
<br>
<b>Why does TRegExpr return more then one line?</b>
<br>
For example, r.e. &lt;font .*&gt; returns the first &lt;font, then <b>the rest of the file</b><b> </b>including last &lt;/html&gt;...
<br>
A.
<br>
For backward compatibility, <a href="tregexpr_syntax.htm#modifier_s">modifier /s</a> is 'On' by default.
<br>
Switch it Off and '.' will match any but <a href="tregexpr_syntax.htm#syntax_line_separators">Line separators</a> - as you wish.
<br>
BTW I suggest you '&lt;font ([^\n&gt;]*)&gt;', in Match[1] will be URL.
<br>

<br>
Q.
<br>
<b>Why does TRegExpr return more then I expect?</b>
<br>
For example r.e. '&lt;p&gt;(.+)&lt;/p&gt;' applyed to string '&lt;p&gt;a&lt;/p&gt;&lt;p&gt;b&lt;/p&gt;' returns 'a&lt;/p&gt;&lt;p&gt;b' but not 'a' as I expected.
<br>
A.
<br>
By default all operators works in 'greedy' more, so they match as more as it possible.
<br>
If You want 'non-greedy' mode You can use 'non-greedy' operators like '+?' and so on (new in v. 0.940) or switch all operators into 'non-greedy' mode with help of modifier 'g' (use appropriate TRegExpr properties or constractions like '?(-g)' in r.e.).
<br>

<br>
Q.
<br>
<b>How to parse sources like HTML with help of TRegExpr</b>
<br>
A.
<br>
Sorry folks, but it's nearly impossible!
<br>
Of course, You can easily use TRegExpr for extracting some information from HTML, as shown in my examples, but if You want accurate parsing You have to use real parser, not r.e.!
<br>
You can read full explanation in Tom Christiansen and Nathan Torkington 'Perl Cookbook', for example. In short - there are many constractions that can be easy parsed by real parser but cannot at all by r.e., and real parser is MUCH faster do the parsing, because r.e. doesn't simply scan input stream, it performes optimization search that can take a lot of time.
<br>

<br>
Q.
<br>
<b>Is there a way to get multiple matchs of a pattern on TRegExpr?</b>
<br>
A.
<br>
You can make loop and iterate match by match with ExecNext method.
<br>
It cannot be done more easily becase of Dalphi isn't interpretator as Perl (and it's benefit - interpretators work very slow!).
<br>
If You want some example, please take a look at TRegExpr.Replace method implementation. or at the examples in <a href="tregexpr_decorator.htm">HyperLinksDecorator.pas</a>
<br>

<br>
Q.
<br>
<b>I am checking user input. Why does TRegExpr return 'True' for wrong input strings?</b>
<br>
A.
<br>
In many cases TRegExpr users forget that regular expression is for SEARCH in input string. So, if You want to make user to enter only 4 digits and using for it '\d{4,4}' expression, You can skip wrong user input like '12345' or 'any letters 1234 and anything else'. You have to add checking for line start and line end to ensure there are not anything else around: '^\d{4,4}$'.
<br>

<br>
<a name="nongreedyoptimization">Q.
<br>
<b>Why does non-greedy iterators sometimes work as in greedy mode?</b>
<br>
For example, the r.e. 'a+?,b+?' applied to string 'aaa,bbb' matches 'aaa,b', but should it not match 'a,b' because of non-greediness of first iterator?
<br>
A.
<br>
This is the limitation of used by TRegExpr (and Perl's and many Unix's regular expressions) mathematics - r.e. performe only 'simple' search optimization, and do not try to do <b>the best optimization</b>. In some cases it's bad, but in common it's rather advantage then limitation - because of perfomance and predictability reasons.
<br>
The main rule - r.e. first of all try to match from current place and only if it's completely impossible move forward by one char and try again from that place. So, if You use 'a,b+?' it match 'a,b', but in case of 'a+?,b+?' it's '<b>not recommended</b>' (due to non-greediness) <b>but possible</b> to match more then one 'a', so TRegExpr do it and at last obtaines correct (but non optimum) match. TRegExpr like Perl's or Unix's r.e. doesn't attempt to move forward and check - would it be 'better' match. Moreover, it cannot be compared in terms 'more or less good match' at all..
<br>
Please, read '<a href="tregexpr_syntax.htm#mechanism">Syntax</a>' section of help for more explanation.
<br>
</font></font>

<small><table width="100%"><tr><td align="right"><a href="tregexpr_decorator.htm"><img src="1arrow4.gif" border="0"></a><a href="tregexpr_author.htm"><img src="1arrow5.gif" border="0"></a></td></tr></small>

<script>     (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){                 (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),             m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)     })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');      ga('create', 'UA-90368520-1', 'auto');     ga('send', 'pageview');  </script>

</body></html>
