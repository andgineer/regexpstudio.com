<html><head><meta name="generator" content="Help & Manual 2.6.3"><title>About</title></head>
<body background="niceblue.gif" bgcolor="#FFFFFF">
<small><table width="100%"><tr><td align="right"><a href="tregexpr_disclaimer.htm"><img src="1arrow5.gif" border="0"></a></td></tr></small><table width="100%" border="0" cellspacing="0" cellpadding="3" bgcolor="#C6E7FF"><tr><td align="left">
<font face="Arial" size="4" color="#000000"><font face="Arial" size="4" color="#0000FF"><b>About</b></font><font face="Arial" size="5" color="#000000"><font face="Arial" size="5" color="#0000FF"><b>
<br>
</b></font></font><font face="Times New Roman" size="3" color="#000000">
<br>
</font></font>

</td></tr></table><br>

<font face="Arial" size="3" color="#000000">TRegExpr ist eine Sammlung von einfach zu benutzenden Routinen, um m�chtige, vorlagenbasierte Zeichenkettenvergleiche durchzuf�hren, beispielsweise zur Pr�fung von strukturierten Dateneingaben in Datenbanken wie beispielsweise Telefonnummern mit Vorwahlen, Sozialversicherungsnummern, Web-Applikationen, komplexere Suchen &amp; Ersetzen-Vorg�nge, Werkzeuge zur Durchforstung von Dateibest�nden nach regelbasierenden Ausdr�cken und so weiter.
<br>

<br>
Du kannst mit TRegExpr leicht und schnell die korrekte Syntax einer E-Mail-Adresse pr�fen, Telefonnummern in einem Text erkennen, URLs aus Qelltexten von Web-Seiten extrahieren, unterschiedliche Schreibweisen eines Ausdruckes finden und durch eine einzige ersetzen. Es bleibt Deiner Fantasie �berlassen, wozu Du TRegExpr noch benutzen kannst. Die Suchvorlagen (im folgenden Templates genannt), k�nnen zur Laufzeit ge�ndert werden, ohne dass eine Neu�bersetzung des Programmes notwendig w�rde!
<br>

<br>
Diese Bibliothek, die ich hiermit in die Freeware lege, ist eine Delphi-Portierung der Routinen, die Henry Spencer als V8-Routinen herausbrachte, um damit eine Untermenge der <a href="tregexpr_syntax.htm">Regul�ren Ausdr�cke von Perl</a> handhaben zu k�nnen.
<br>

<br>
Demgegen�ber ist TRegExpr vollst�ndig in einfachem Object-Pascal geschrieben und wird mit dem ganzen Quelltext kostenlos zur Verf�gung gestellt.
<br>

<br>
Der originale C-Quelltext wurde verbessert, in eine Klasse <a href="tregexpr_interface.htm">TRegExpr</a> gekapselt und in einer einzigen Datei gespeichert: RegExpr.pas.
<br>

<br>
Du brauchst also keine DLL mehr f�r Regul�re Ausdr�cke!
<br>

<br>
Schaue Dir mal die einfachen <a href="tregexpr_how_it_works.htm">Beispiele</a> an und studiere die <a href="tregexpr_syntax.htm">Syntax</a> der Regul�ren Ausdr�cke (Du kannst nat�rlich auch das <a href="tregexpr_testrexp.htm">Demo-Projekt</a> f�r Studienzwecke heranziehen und damit auch Deine eigenen Regul�ren Ausdr�cken ausarbeiten oder debuggen).
<br>

<br>
Du kannst sogar Unicode (d.h. Delphis WideString) benutzen - weiteres unter "<a href="tregexpr_interface.htm#unicode_support">Wie wird Unicode benutzt?</a>".
<br>

<br>
Wirf auch einen Blick auf die <a href="tregexpr_whats_new.htm">Was gibt's Neues</a> Sektion f�r die neuesten �nderungen.
<br>

<br>
Und nat�rlich sind Kommentare, Ideen, Vorschl�ge und sogar Bug Reports willkommen.
<br>

<br>
<a href="tregexpr_author.htm">Der Autor</a> ist dankbar f�r �bersetzungen in <a href="tregexpr_installation.htm#help_files_list">andere Sprachen</a>.
<br>

<br>

<br>
</font>

<small><table width="100%"><tr><td align="right"><a href="tregexpr_disclaimer.htm"><img src="1arrow5.gif" border="0"></a></td></tr></small>

<script>     (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){                 (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),             m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)     })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');      ga('create', 'UA-90368520-1', 'auto');     ga('send', 'pageview');  </script>

</body></html>
