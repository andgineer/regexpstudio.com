<html><head><meta name="generator" content="Help & Manual 2.6.3"><title>Syntax von Regularen Ausdrucken</title></head>
<body background="niceblue.gif" bgcolor="#FFFFFF">
<small><table width="100%"><tr><td align="right"><a href="tregexpr_how_it_works.htm"><img src="1arrow4.gif" border="0"></a><a href="tregexpr_interface.htm"><img src="1arrow5.gif" border="0"></a></td></tr></small><table width="100%" border="0" cellspacing="0" cellpadding="3" bgcolor="#C6E7FF"><tr><td align="left">
<font face="Arial" size="4" color="#000000"><font face="Arial" size="4" color="#0000FF"><b>Syntax von Regul�ren Ausdr�cken</b></font><font face="Arial" size="5" color="#000000"><font face="Arial" size="5" color="#0000FF"><b>
<br>
</b></font></font></font>

</td></tr></table><br>

<font face="Arial" size="3" color="#000000">
<br>
<font face="Arial" size="3" color="#0000FF"><b>Einf�hrung</b></font><font face="Arial" size="3" color="#000000">
<br>
</font><font face="Arial" size="4" color="#000000">
<br>
</font><font face="Arial" size="3" color="#000000">Regul�re Ausdr�cke werden weitum verwendet, um Textmuster zu beschreiben, nach welchen dann gesucht wird. Spezielle <b>Metazeichen</b> erlauben das Definieren von Bedingungen, beispielsweise soll ein bestimmter gesuchter String am Anfang oder am Ende einer Zeile vorkommen, oder ein bestimmtes Zeichen soll n mal Vorkommen.
<br>

<br>
Regul�re Ausdr�cke sehen �blicherweise f�r Anf�nger ziemlich kryptisch aus, sind aber im Grunde genommen sehr einfache (nun, �blicherweise einfache ;) ), handliche und enorm m�chtige Werkzeuge.
<br>

<br>
Ich empfehle Dir w�rmstens, dass Du mit dem Demo-Projekt in <a href="tregexpr_testrexp.htm">TestRExp.dpr</a> etwas mit den regul�ren Ausdr�cken herumspielst - es wird Dir enorm dabei helfen, die haupts�chlichen Konzepte zu erfassen. Dar�berhinaus findest Du viele vorgegebene und kommentierte Beispiele in TestRExp.
<br>

<br>
Also, starten wir in die Lernkurve!
<br>

<br>

<br>
<font face="Arial" size="3" color="#0000FF"><b>Einfache Treffer</b></font></font><font face="Arial" size="3" color="#000000">
<br>

<br>
Jedes einzelne Zeichen findet sich selbst, ausser es sei ein <b>Metazeichen</b> mit einer speziellen Bedeutung (siehe weiter unten).
<br>

<br>
Eine Sequenz von Zeichen findet genau dieses Sequenz im zu durchsuchenden String (Zielstring). Also findet das Muster (= regul�re Ausdruck) "bluh" genau die Sequenz "bluh'' irgendwo im Zielstring. Ganz einfach, nicht wahr?
<br>

<br>
Damit Du Zeichen, die �blicherweise als <b>Metazeichen</b> oder <b>Escape-Sequenzen</b> dienen, als ganz normale Zeichen ohne jede Bedeutung finden kannst, stelle so einem Zeichen einen "\" voran. Diese Techninik nennt man Escaping. Ein Beispiel: das Metazeichen "^" findet den Anfang des Zielstrings, aber "\^" findet das Zeichen "^" (Circumflex), "\\" findet also "\" etc.
<br>

<br>
<b>Beispiele:</b>
<br>
</font><font face="Courier" size="3" color="#000000">&nbsp;&nbsp;foobar&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font face="Arial" size="3" color="#000000"><i>findet den String 'foobar'
<br>
</i></font><font face="Courier" size="3" color="#000000">&nbsp;&nbsp;\^FooBarPtr&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font face="Arial" size="3" color="#000000"><i>findet den String '^FooBarPtr'
<br>
</i>
<br>

<br>
<font face="Arial" size="3" color="#0000FF"><b>Escape-Sequenzen</b></font></font><font face="Arial" size="3" color="#000000">
<br>

<br>
Zeichen k�nenn auch angeben werden mittels einer <b>Escape-Sequenz</b>, in der Syntax �hnlich derer, die in C oder Perl benutzt wird: "\n'' findet eine neue Zeile, "\t'' einen Tabulator etc. Etwas allgemeiner: \xnn, wobei nn ein String aus hexadezimalen Ziffern ist, findet das Zeichen, dessen ASCII Code gleich nn ist. Falls Du Unicode-Zeichen (16 Bit breit kodierte Zeichen) angeben m�chtest, dann benutze '\x{nnnn}', wobei 'nnnn' - eine oder mehrere hexadezimale Ziffern sind.
<br>

<br>
</font><font face="Courier" size="3" color="#000000">&nbsp;&nbsp;\xnn&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font face="Arial" size="3" color="#000000"><i>Zeichen mit dem Hex-Code nn (ASCII-Text)
<br>
</i></font><font face="Courier" size="3" color="#000000">&nbsp;&nbsp;\x{nnnn}&nbsp;</font><font face="Arial" size="3" color="#000000"><i>Zeichen mit dem Hex-Code nnnn (ein Byte f�r ASCII-Text und zwei Bytes f�r <a href="tregexpr_interface.htm#unicode_support">Unicode</a>-Zeichen
<br>
</i></font><font face="Courier" size="3" color="#000000">&nbsp;&nbsp;\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font face="Arial" size="3" color="#000000"><i>ein Tabulator (HT/TAB), gleichbedeutend wie \x09
<br>
</i></font><font face="Courier" size="3" color="#000000">&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font face="Arial" size="3" color="#000000"><i>Zeilenvorschub (NL), gleichbedeutend wie \x0a</i></font><font face="Arial" size="4" color="#000000">
<br>
</font><font face="Courier" size="3" color="#000000">&nbsp;&nbsp;\r&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font face="Arial" size="3" color="#000000"><i>Wagenr�cklauf (CR), gleichbedeutend wie \x0d
<br>
</i></font><font face="Courier" size="3" color="#000000">&nbsp;&nbsp;\f&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font face="Arial" size="3" color="#000000"><i>Seitenvorschub (FF), gleichbedeutend wie \x0c
<br>
</i></font><font face="Courier" size="3" color="#000000">&nbsp;&nbsp;\a&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font face="Arial" size="3" color="#000000"><i>Alarm (bell) (BEL), gleichbedeutend wie \x07
<br>
</i></font><font face="Courier" size="3" color="#000000">&nbsp;&nbsp;\e&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font face="Arial" size="3" color="#000000"><i>Escape (ESC), gleichbedeutend wie \x1b
<br>
</i>
<br>
<b>Beispiele:</b>
<br>
</font><font face="Courier" size="3" color="#000000">&nbsp;&nbsp;foo\x20bar&nbsp;&nbsp;&nbsp;</font><font face="Arial" size="3" color="#000000"><i>findet 'foo bar' (beachte den Leerschlag in der Mitte)
<br>
</i></font><font face="Courier" size="3" color="#000000">&nbsp;&nbsp;\tfoobar&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font face="Arial" size="3" color="#000000"><i>findet 'foobar', dem unmittelbar ein Tabulator vorangeht
<br>
</i>
<br>

<br>
<font face="Arial" size="3" color="#0000FF"><b>Zeichenklassen</b></font></font><font face="Arial" size="3" color="#000000">
<br>

<br>
Du kannst sogenannte <b>Zeichenklassen</b> definieren, indem Du eine Liste von Zeichen, eingeschlossen in eckige Klammern [], angibst. So eine Zeichenklasse findet genau <b>eines der aufgelisteten Zeichen</b> Zeichen im Zielstring.
<br>

<br>
Falls das erste aufgelistete Zeichen, das direkt nach dem "[", ein "^" ist, findet die Zeichenklasse jedes Zeichen <b>ausser </b>denjenigen in der Liste.
<br>

<br>
<b>Beispiele:</b>
<br>
</font><font face="Courier" size="3" color="#000000">&nbsp;&nbsp;foob[aeiou]r&nbsp;&nbsp;&nbsp;</font><font face="Arial" size="3" color="#000000"><i>findet die Strings 'foobar', 'foober' etc. aber nicht 'foobbr', 'foobcr' etc.
<br>
</i></font><font face="Courier" size="3" color="#000000">&nbsp;&nbsp;foob[^aeiou]r&nbsp;&nbsp;</font><font face="Arial" size="3" color="#000000"><i>findet die Strings 'foobbr', 'foobcr' etc. aber nicht 'foobar', 'foober' etc.
<br>
</i>
<br>
Innerhalb der Liste kann das Zeichen "-" benutzt werden, um einen <b>Bereich</b> oder eine <b>Menge</b> von Zeichen zu definieren. So definiert a-z alle Zeichen zwischen "a" and "z" inklusive. 
<br>

<br>
Falls das Zeichen "-" selbst ein Mitglied der Zeichenklasse sein soll, dann setze es als erstes oder letztes Zeichen in die Liste oder sch�tze es mit einem vorangestellten "\" (escaping). Wenn das Zeichen "]" ebenfalls Mitglied der Zeichenklasse sein soll, dann setze es als erstes Zeichen in die Liste oder escape es.
<br>

<br>
<b>Beispiele:
<br>
</b></font><font face="Courier" size="3" color="#000000">&nbsp;&nbsp;[-az]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font face="Arial" size="3" color="#000000"><i>findet 'a', 'z' und '-'
<br>
</i></font><font face="Courier" size="3" color="#000000">&nbsp;&nbsp;[az-]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font face="Arial" size="3" color="#000000"><i>findet 'a', 'z' und '-'
<br>
</i></font><font face="Courier" size="3" color="#000000">&nbsp;&nbsp;[a\-z]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font face="Arial" size="3" color="#000000"><i>findet 'a', 'z' und '-'
<br>
</i></font><font face="Courier" size="3" color="#000000">&nbsp;&nbsp;[a-z]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font face="Arial" size="3" color="#000000"><i>findet alle 26 Kleinbuchstaben von 'a' bis 'z'</i>
<br>
</font><font face="Courier" size="3" color="#000000">&nbsp;&nbsp;[\n-\x0D]&nbsp;&nbsp;</font><font face="Arial" size="3" color="#000000"><i>findet eines der Zeichen  #10, #11, #12 oder #13.
<br>
</i></font><font face="Courier" size="3" color="#000000">&nbsp;&nbsp;[\d-t]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font face="Arial" size="3" color="#000000"><i>findet irgendeine Ziffer, '-' oder 't'.</i> 
<br>
</font><font face="Courier" size="3" color="#000000">&nbsp;&nbsp;[]-a]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font face="Arial" size="3" color="#000000"><i>findet irgendein Zeichen von ']'..'a'.</i>
<br>

<br>

<br>
<font face="Arial" size="3" color="#0000FF"><b>Metazeichen
<br>
</b></font></font><font face="Arial" size="3" color="#000000">
<br>
Metazeichen sind Zeichen mit speziellen Bedeutungen. Sie sind die Essenz der regul�ren Ausdr�cke. Es gibt verschiedene Arten von Metazeichen wie unten beschrieben.
<br>

<br>

<br>
<font face="Arial" size="3" color="#0000FF"><b><a name="syntax_line_separators">Metazeichen - Zeilenseparatoren</b></font></font><font face="Arial" size="3" color="#000000"><font face="Arial" size="3" color="#0000FF"><b>
<br>
</b></font></font><font face="Arial" size="3" color="#000000">
<br>
</font><font face="Courier" size="3" color="#000000">&nbsp;&nbsp;^&nbsp;&nbsp;&nbsp;</font><font face="Arial" size="3" color="#000000"><i>Beginn einer Zeile</i>
<br>
</font><font face="Courier" size="3" color="#000000">&nbsp;&nbsp;$&nbsp;&nbsp;&nbsp;</font><font face="Arial" size="3" color="#000000"><i>Ende einer Zeile
<br>
</i></font><font face="Courier" size="3" color="#000000">&nbsp;&nbsp;\A&nbsp;&nbsp;</font><font face="Arial" size="3" color="#000000"><i>start of text</i>
<br>
</font><font face="Courier" size="3" color="#000000">&nbsp;&nbsp;\Z&nbsp;&nbsp;</font><font face="Arial" size="3" color="#000000"><i>end of text
<br>
</i></font><font face="Courier" size="3" color="#000000">&nbsp;&nbsp;.&nbsp;&nbsp;&nbsp;</font><font face="Arial" size="3" color="#000000"><i>irgendein beliebiges Zeichen </i>
<br>
</font><font face="Courier" size="3" color="#000000">
<br>
</font><font face="Arial" size="3" color="#000000"><b>Beispiele:
<br>
</b></font><font face="Courier" size="3" color="#000000">&nbsp;&nbsp;^foobar&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font face="Arial" size="3" color="#000000"><i>findet den String 'foobar' nur, wenn es am Zeilenanfang vorkommt</i>
<br>
</font><font face="Courier" size="3" color="#000000">&nbsp;&nbsp;foobar$&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font face="Arial" size="3" color="#000000"><i>findet den String 'foobar' nur, wenn es am Zeilenende vorkommt</i>
<br>
</font><font face="Courier" size="3" color="#000000">&nbsp;&nbsp;^foobar$&nbsp;&nbsp;&nbsp;&nbsp;</font><font face="Arial" size="3" color="#000000"><i>findet den String 'foobar' nur, wenn er der einzige String in der Zeile ist</i>
<br>
</font><font face="Courier" size="3" color="#000000">&nbsp;&nbsp;foob.r&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font face="Arial" size="3" color="#000000"><i>findet Strings wie 'foobar', 'foobbr', 'foob1r' etc.
<br>
</i>
<br>
Standardm�ssig garantiert das Metazeichen "^" nur, dass das Suchmuster sich am Anfang des Zielstrings befinden muss, oder am Ende des Zielstrings mit dem Metazeichen "$". Kommen im Zielstring Zeilenseparatoren vor, so werden diese von "^" oder "$" nicht gefunden.
<br>
Du kannst allerdings den Zielstring als mehrzeiligen Puffer behandeln, so dass "^" die Stelle unmittelbar nach, und "$" die Stelle unmittelbar vor irgendeinem Zeilenseparator findet. Du kannst diese Art der Suche einstellen mit dem <a href="tregexpr_syntax.htm#modifier_m">Modifikator /m</a>.
<br>

<br>
The \A and \Z are just like "^'' and "$'', except that they won't match multiple times when the <a href="tregexpr_syntax.htm#modifier_m">modifier /m</a> is used, while "^'' and "$'' will match at every internal line separator. 
<br>

<br>
Das ".'' Metazeichen findet standardm�ssig irgendein beliebiges Zeichen, also auch Zeilenseparatoren. Wenn Du den <a href="tregexpr_syntax.htm#modifier_s">Modifikator /s</a>
<br>

<br>
 ausschaltest, dann findet '.' keine Zeilenseparatoren mehr.
<br>

<br>
TRegExpr geht mit Zeilenseparatoren so um, wie es auf www.unicode.org (http://www.unicode.org/unicode/reports/tr18/) empfohlen ist:
<br>

<br>
 "^" ist am Anfang des Eingabestrings, und, falls der <a href="tregexpr_syntax.htm#modifier_m">Modifikator /m</a> gesetzt ist, auch unmitelbar folgend einem Vorkommen von \x0D\x0A oder \x0A or \x0D (falls Du die <a href="tregexpr_interface.htm#unicode_support">Unicode-Version</a> von TregExpr benutzst, dann auch nach \x2028 oder  \x2029 oder \x0B oder \x0C oder \x85). Beachte, dass es keine leere Zeile gibt in den Sequence \x0D\x0A. Diese beiden Zeichen werden atomar behandelt. 
<br>

<br>
"$" ist am Anfang des Eingabestrings, und, falls der <a href="tregexpr_syntax.htm#modifier_m">Modifikator /m</a> gesetzt ist, auch unmitelbar vor einem Vorkommen von \x0D\x0A oder \x0A or \x0D (falls Du die <a href="tregexpr_interface.htm#unicode_support">Unicode-Version</a> von TregExpr benutzst, dann auch vor \x2028 oder  \x2029 oder \x0B oder \x0C oder \x85). Beachte, dass es keine leere Zeile gibt in den Sequence \x0D\x0A. Diese beiden Zeichen werden atomar behandelt. 
<br>

<br>
"." findet ein beliebiges Zeichen. Wenn Du aber den <a href="tregexpr_syntax.htm#modifier_s">Modifikator /s</a> ausstellst, dann findet "." keine Zeilensearaptoren \x0D\x0A und \x0A und \x0D mehr (falls Du die <a href="tregexpr_interface.htm#unicode_support">Unicode-Version</a> von TregExpr benutzst, dann auch \x2028 und  \x2029 und \x0B und \x0C and \x85).
<br>
 
<br>
Beachte, dass "^.*$" (was auch eine leere Zeile findet k�nnen sollte) dennoch nicht den leeren String innerhalb der Sequence \x0D\x0A findet, aber es findet den Leerstring innerhalb der Sequenz \x0A\x0D.
<br>

<br>
Die Behandlung des Zielstrings als mehrzeiliger String kann leicht Deinen Bed�rfnissen angepasst werden dank der TregExpr-Eigenschaften <a href="tregexpr_interface.htm#lineseparators">LineSeparators</a> und <a href="tregexpr_interface.htm#linepairedseparator">LinePairedSeparator</a>. Du kannst nur den UNIX-Stil Zeilenseparator \n benutzen oder nur DOS-Stil Separatoren \r\n oder beide gelichzeitig (wie schon oben beschrieben und wie es als Standard gesetzt ist). Du kannst auch Deine eigenen Zeilenseparatoren definieren!
<br>

<br>

<br>
<font face="Arial" size="3" color="#0000FF"><b><a name="syntax_predefined_classes">Metazeichen - vordefinierte Klassen</b></font></font><font face="Arial" size="3" color="#000000"><font face="Arial" size="3" color="#0000FF"><b>
<br>

<br>
</b></font></font><font face="Courier" size="3" color="#000000">&nbsp;&nbsp;\w&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font face="Arial" size="3" color="#000000"><i>ein alphanumerisches Zeichen inklusive "_"
<br>
</i></font><font face="Courier" size="3" color="#000000">&nbsp;&nbsp;\W&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font face="Arial" size="3" color="#000000"><i>kein alphanumerisches Zeichen, auch kein "_"</i>
<br>
</font><font face="Courier" size="3" color="#000000">&nbsp;&nbsp;\d&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font face="Arial" size="3" color="#000000"><i>ein </i><i>numerisches Zeichen
<br>
</i></font><font face="Courier" size="3" color="#000000">&nbsp;&nbsp;\D&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font face="Arial" size="3" color="#000000"><i>kein </i><i>numerisches Zeichen</i>
<br>
</font><font face="Courier" size="3" color="#000000">&nbsp;&nbsp;\s&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font face="Arial" size="3" color="#000000"><i>irgendein w�rtertrennendes Zeichen (entspricht [ \t\n\r\f])
<br>
</i></font><font face="Courier" size="3" color="#000000">&nbsp;&nbsp;\S&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font face="Arial" size="3" color="#000000"><i>kein w�rtertrennendes Zeichen</i>
<br>

<br>
Du kannst \w, \d und \s innerhalb Deiner selbstdefinierten Zeichenklassen benutzen.
<br>

<br>
<b>Beispiele:
<br>
</b></font><font face="Courier" size="3" color="#000000">&nbsp;&nbsp;foob\dr&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font face="Arial" size="3" color="#000000"><i>findet Strings wie 'foob1r', ''foob6r' etc., aber not 'foobar', 'foobbr' etc.</i>
<br>
</font><font face="Courier" size="3" color="#000000">&nbsp;&nbsp;foob[\w\s]r&nbsp;</font><font face="Arial" size="3" color="#000000"><i>findet Strings wie 'foobar', 'foob r', 'foobbr' etc., aber nicht 'foob1r', 'foob=r' etc.</i>
<br>

<br>
TRegExpr benutzt die Eigenschaften <a href="tregexpr_interface.htm#tregexpr_spacechars">SpaceChars</a> und <a href="tregexpr_interface.htm#tregexpr_wordchars">WordChars</a>, um die Zeichenklassen \w, \W, \s, \S zu definieren. Somit kannst Du sie auch leicht umdefinieren.
<br>

<br>

<br>
<font face="Arial" size="3" color="#0000FF"><b><a name="syntax_word_boundaries">Metazeichen - Wortgrenzen
<br>
</b></font></font><font face="Arial" size="3" color="#000000">
<br>
  \b<i>     findet eine Wortgrenze
<br>
</i>  \B<i>    findet alles ausser einer Wortgrenze
<br>

<br>
</i>Eine Wortgrenze (\b) is der Ort zwischen zwei Zeichen, welcher ein \w auf der einen und ein \W auf der anderen Seite hat bzw. umgekehrt. \b bezeichnet alle Zeichen des \w bis vor das erste Zeichen des \W bzw. umgekehrt.
<br>

<br>

<br>
<font face="Arial" size="3" color="#0000FF"><b><a name="metacharacters_iterators">Metazeichen - Iteratoren</b></font></font><font face="Arial" size="3" color="#000000"><font face="Arial" size="3" color="#0000FF"><b>
<br>

<br>
</b></font></font><font face="Arial" size="3" color="#000000">Jeder Teil eines regul�ren Ausdruckes kann gefolgt werden von einer anderen Art von Metazeichen - den <b>Iteratoren</b>. Dank dieser Metazeichen kannst Du die H�ufigkeit des Auftretens des Suchmusters im Zielstring definieren. Dies gilt jeweils f�r das vor diesem Metazeichen stehenden Zeichen, das <b>Metazeichen</b> oder den <b>Teilausdruck</b>.
<br>

<br>
</font><font face="Courier" size="3" color="#000000">&nbsp;&nbsp;*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font face="Arial" size="3" color="#000000"><i>kein- oder mehrmaliges Vorkommen</i><i> ("gierig"), gleichbedeutend wie {0,}</i><i>
<br>
</i></font><font face="Courier" size="3" color="#000000">&nbsp;&nbsp;+&nbsp;&nbsp;&nbsp;&nbsp;</font><font face="Courier" size="4" color="#000000">&nbsp;</font><font face="Courier" size="3" color="#000000">&nbsp;</font><font face="Arial" size="3" color="#000000"><i>ein- oder mehrmaliges Vorkommen</i><i> ("gierig"), gleichbedeutend wie {1,}</i><i>
<br>
</i></font><font face="Courier" size="3" color="#000000">&nbsp;&nbsp;?&nbsp;&nbsp;&nbsp;</font><font face="Courier" size="4" color="#000000">&nbsp;</font><font face="Courier" size="3" color="#000000">&nbsp;&nbsp;</font><font face="Arial" size="3" color="#000000"><i>kein- oder einmaliges Vorkommen  ("gierig"), gleichbedeutend wie {0,1}</i><i>
<br>
</i></font><font face="Courier" size="3" color="#000000">&nbsp;&nbsp;{n}&nbsp;&nbsp;&nbsp;&nbsp;</font><font face="Arial" size="3" color="#000000"><i>genau n-maliges Vorkommen ("gierig")</i>
<br>
</font><font face="Courier" size="3" color="#000000">&nbsp;&nbsp;{n,}&nbsp;&nbsp;&nbsp;</font><font face="Arial" size="3" color="#000000"><i>mindestens n-maliges Vorkommen ("gierig")
<br>
</i></font><font face="Courier" size="3" color="#000000">&nbsp;&nbsp;{n,m}&nbsp;&nbsp;</font><font face="Arial" size="3" color="#000000"><i>mindestens n-, aber h�chstens m-maliges Vorkommen ("gierig")
<br>
</i></font><font face="Courier" size="3" color="#000000">&nbsp;&nbsp;*?&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font face="Arial" size="3" color="#000000"><i>kein- oder mehrmaliges Vorkommen</i><i> ("gen�gsam"), gleichbedeutend wie {0,}?</i><i>
<br>
</i></font><font face="Courier" size="3" color="#000000">&nbsp;&nbsp;+?&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font face="Arial" size="3" color="#000000"><i>ein oder mehrmaliges Vorkommen</i><i> ("gen�gsam"), gleichbedeutend wie {1,}?</i><i>
<br>
</i></font><font face="Courier" size="3" color="#000000">&nbsp;&nbsp;??&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font face="Arial" size="3" color="#000000"><i>kein- oder einmaliges Vorkommen ("gen�gsam"), gleichbedeutend wie {0,1}?</i><i>
<br>
</i></font><font face="Courier" size="3" color="#000000">&nbsp;&nbsp;{n}?&nbsp;&nbsp;&nbsp;</font><font face="Arial" size="3" color="#000000"><i>genau n-maliges Vorkommen ("gen�gsam")</i>
<br>
</font><font face="Courier" size="3" color="#000000">&nbsp;&nbsp;{n,}?&nbsp;&nbsp;</font><font face="Arial" size="3" color="#000000"><i>Mindestens n-maliges Vorkommen ("gen�gsam")
<br>
</i></font><font face="Courier" size="3" color="#000000">&nbsp;&nbsp;{n,m}?&nbsp;</font><font face="Arial" size="3" color="#000000"><i>mindestens n-, aber h�chstens m-maliges Vorkommen ("gen�gsam")
<br>
</i>
<br>
Also, die Ziffern in den geshcweiften Klammern in der Form {n,m} geben an, wieviele Male das Suchmuster im Zielstring gefunden muss, um einen Treffer zu ergeben. Die Angabe {n} ist gleichbedeutend wie {n,n} und findet genau n Vorkommen. Die Form {n,} findet n oder mehre Vorkommen. Es gibt keine Limiten f�r die Zahlen n und m. Aber je gr�sser sie sind, desto mehr Speicher und Zeit wird ben�tigt, um den regul�ren Ausdruck auszuwerten.
<br>

<br>
Falls eine geschweifte Klammer in einem anderen als dem eben vorgestellten Kontext vorkommt, wird es wie ein normales Zeichen behandelt.
<br>

<br>
<b>Beispiele:
<br>
</b></font><font face="Courier" size="3" color="#000000">&nbsp;&nbsp;foob.*r&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font face="Arial" size="3" color="#000000"><i>findet Strings wie 'foobar',  'foobalkjdflkj9r' und 'foobr'</i>
<br>
</font><font face="Courier" size="3" color="#000000">&nbsp;&nbsp;foob.+r&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font face="Arial" size="3" color="#000000"><i>findet Strings wie 'foobar', 'foobalkjdflkj9r', aber nicht 'foobr'
<br>
</i></font><font face="Courier" size="3" color="#000000">&nbsp;&nbsp;foob.?r&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font face="Arial" size="3" color="#000000"><i>findet Strings wie 'foobar', 'foobbr' und 'foobr', aber nicht 'foobalkj9r'
<br>
</i></font><font face="Courier" size="3" color="#000000">&nbsp;&nbsp;fooba{2}r&nbsp;&nbsp;&nbsp;</font><font face="Arial" size="3" color="#000000"><i>findet den String 'foobaar'
<br>
</i></font><font face="Courier" size="3" color="#000000">&nbsp;&nbsp;fooba{2,}r&nbsp;&nbsp;</font><font face="Arial" size="3" color="#000000"><i>findet Strings wie 'foobaar', 'foobaaar', 'foobaaaar' etc.
<br>
</i></font><font face="Courier" size="3" color="#000000">&nbsp;&nbsp;fooba{2,3}r&nbsp;</font><font face="Arial" size="3" color="#000000"><i>findet Strings wie 'foobaar', or 'foobaaar', aber nicht 'foobaaaar'
<br>
</i>
<br>
Eine kleine Erkl�rung zum Thema "gierig" oder "gen�gsam". "Gierig" nimmt soviel wie m�glich, wohingegen "gen�gsam" bereits mit dem ersten Erf�llen des Suchmusters zufrieden ist. Beispiel: 'b+' und 'b*' angewandut auf den Zielstring 'abbbbc' findet 'bbbb', 'b+?' findet 'b', 'b*?' findet den leeren String, 'b{2,3}?' findet 'bb', 'b{2,3}' findet 'bbb'.
<br>

<br>
Du kannst alle Iteratoren auf den genugsamen Modus umschalten mit dem <a href="tregexpr_syntax.htm#modifier_g">Modifier /g</a>.
<br>

<br>

<br>
<font face="Arial" size="3" color="#0000FF"><b>Metazeichen - Alternativen
<br>

<br>
</b></font></font><font face="Arial" size="3" color="#000000">Du kannst eine Serie von <b>Alternativen</b> f�r eine Suchmuster angeben, indem Du diese mit einem "|'' trennst. Auf diese Art findet das Suchmuster fee|fie|foe eines von "fee", "fie", oder "foe" im Zielstring - dies w�rde auch mit f(e|i|o)e ereicht.
<br>

<br>
Die erste Alternative beinhaltet alles vom letzten Muster-Limiter ("(", "[" oder nat�rlich der Anfang des Suchmusters) bis zum ersten "|". Die letzte Alternative beinhaltet alles vom letzten "|" bis zum n�chsten Muster-Limiter. Aus diesem Grunde ist es allgemein eine gute Gewohnheit, die Alternativen in Klammern anzugeben, um m�glichen Missverst�ndnissen dar�ber vorzubeugen, wo die Alternativen beginnen und enden.
<br>

<br>
Alternativen werden von links nach rechts gep�rft, so dass der Treffer im Zielstring zusammengesetzt ist aus den jeweils zuerst passenden Alternativen. Das bedeutet, dass Alternativen nicht notwendigerweise "gierig" sind. Ein Beispiel: Wenn man mit "(foo|foot)" im Zielstring "barefoot" sucht, so passt bereits die erste Variante. Diese Tatsache mag nicht besonders wichtig erscheinen, aber es ist nat�rlich wichtig, wenn der gefundene Text weiterverwendet wird. Im Beispiel zuvor w�rde der Benutzer nicht "foot" erhalten, wie er eventuell beabsichtigt hatte, sondern nur "foo".
<br>

<br>
Erinnere Dich auch daran, dass das "|" innerhalb von eckigen Klammern wie ein normales Zeichen behandelt wird, so dass [fee|fie|foe] dasselbe bedeutet wie [feio|].
<br>

<br>
<b>Beispiele:
<br>
</b></font><font face="Courier" size="3" color="#000000">&nbsp;&nbsp;foo(bar|foo)&nbsp;&nbsp;</font><font face="Arial" size="3" color="#000000"><i>findet die Strings 'foobar' oder 'foofoo'.</i>
<br>

<br>

<br>
<font face="Arial" size="3" color="#0000FF"><b>Metazeichen - Teilausdr�cke
<br>

<br>
</b></font></font><font face="Arial" size="3" color="#000000">Das KLammernkonstrukt (...) wird auch dazu benutzt, regul�re Teilausdr�cke zu definieren (nach dem Parsen findest Du Positionen, L�ngen und effektive Inhalte der regul�ren Teilausdr�cke in den TRegExpr-Eigenschaften MatchPos, MatchLen und <a href="tregexpr_interface.htm#tregexpr_match">Match</a> und kannst sie ersetzen mit den Template-Strings in <a href="tregexpr_interface.htm#tregexpr_substitute">TRegExpr.Substitute</a>).
<br>

<br>
Teilausdr�cke werden nummeriert von links nach recht, jeweils in der Reihenfolge ihrer �ffnenden Klammer. Der erste Teilausdruck hat die Nummer 1, der gesamte regul�re Ausdruck hat die Nummer 0 (der gesamte Ausdruck kann ersetzt werden in <a href="tregexpr_interface.htm#tregexpr_substitute">TRegExpr.Substitute</a> als '$0' oder '$&amp;').
<br>

<br>
<b>Beispiele:
<br>
</b></font><font face="Courier" size="3" color="#000000">&nbsp;&nbsp;(foobar){8,10}&nbsp;&nbsp;</font><font face="Arial" size="3" color="#000000"><i>findet Strings, die 8, 9 oder 10 Vorkommen von 'foobar' beinhalten
<br>
</i></font><font face="Courier" size="3" color="#000000">&nbsp;&nbsp;foob([0-9]|a+)r&nbsp;</font><font face="Arial" size="3" color="#000000"><i>findet 'foob0r', 'foob1r' , 'foobar', 'foobaar', 'foobaar' etc.</i>
<br>
    
<br>

<br>
<font face="Arial" size="3" color="#0000FF"><b>Metazeichen - R�ckw�rtsreferenzen
<br>
</b></font></font><font face="Arial" size="3" color="#000000">
<br>
Die <b>Metacharacters</b> \1 bis \9 werden in Suchmustern interpretiert als R�ckw�rtsreferenzen. \&lt;n&gt; findet einen zuvor bereits gefundenen <b>Teilausdruck</b> #&lt;n&gt;.
<br>

<br>
<b>Beispiele:
<br>
</b></font><font face="Courier" size="3" color="#000000">&nbsp;&nbsp;(.)\1+&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font face="Arial" size="3" color="#000000"><i>findet 'aaaa' und 'cc'. 
<br>
</i></font><font face="Courier" size="3" color="#000000">&nbsp;&nbsp;(.+)\1+&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font face="Arial" size="3" color="#000000"><i>findet auch 'abab' und '123123'
<br>
</i></font><font face="Courier" size="3" color="#000000"><i>&nbsp;&nbsp;(['"]?)(\d+)\1&nbsp;</i></font><font face="Arial" size="3" color="#000000"><i>findet "13"</i><i> (innerhalb ")</i><i>, oder '4'</i><i> (innerhalb ')</i><i> oder auch 77, etc.
<br>
</i>
<br>

<br>
<font face="Arial" size="3" color="#0000FF"><b><a name="about_modifiers">Modifikatoren</b></font></font><font face="Arial" size="3" color="#000000">
<br>
<table border="0" cellpadding="0" cellspacing="0"><tr valign="TOP"><td width="25"></td><td><font face="Arial" size="3" color="#000000">
&nbsp;<br>
</font></font></td></tr><tr valign="top"><td></td><td><font face="Arial" size="3" color="#000000"></font></td></tr></table><font face="Arial" size="3" color="#000000">Modifikatoren sind dazu da, das Verhalten von TRegExpr zu ver�ndern.
<br>

<br>
Es gibt viele Wege, die weiter unten beschriebenen Modifikatoren zu nutzen. Jeder der Modifikatoren lann eingebettet werden im Suchmuster des regul�ren Ausdruckes mittels des Konstruktes <a href="tregexpr_syntax.htm#inline_modifiers">(?...)</a>.
<br>

<br>
Du kannst allerdings auch die meisten Modifikatoren beeinflussen, indem Du den entsprechenden TRegExpr-Eigenschaften die passenden Werte zuweist (Beispiel: Zuweisung an <a href="tregexpr_interface.htm#tregexpr_modifier_x">ModifierX</a> oder ModifierStr f�r alle Modifikatoren zugleich).
<br>

<br>
Die Standardwerte f�r neue Instanzen von TRegExpr-Objekte sind definiert in <a href="tregexpr_interface.htm#modifier_defs">globalen Variablen</a>. Beispielsweise definiert die globale Variable RegExprModifierX das Verhalten des Modifikators X und damit die Einstellung der TRegExpr-Eigenschaft ModifierX bei neu instantiierten TRegExpr-Objekten.
<br>

<br>
<b><a name="modifier_i">i</b>
<br>
<table border="0" cellpadding="0" cellspacing="0"><tr valign="TOP"><td width="25"></td><td><font face="Arial" size="3" color="#000000">F�hre die Suche Schreibweisen-unabh�gig durch (allerdings abh�ngig von den Einstellungen in Deinem System, Lokale Einstellungen), (beachte auch die <a href="tregexpr_interface.htm#invertcase">InvertCase</a>)
&nbsp;<br>
</font></font></td></tr><tr valign="top"><td></td><td><font face="Arial" size="3" color="#000000"></font></td></tr></table><font face="Arial" size="3" color="#000000"><b><a name="modifier_m">m </b></font><font face="Times New Roman" size="4" color="#000000">
<br>
<table border="0" cellpadding="0" cellspacing="0"><tr valign="TOP"><td width="25"></td><td><font face="Times New Roman" size="4" color="#000000"></font></font><font face="Arial" size="3" color="#000000">Behandle den Zielstring als mehrzeiligen String. Das bedeutet, �ndere die Bedeutungen von "^" und "$": Statt nur den Anfang oder das Ende des Zielstrings zu finden, wird jeder Zeilenseparator innerhalb eines Strings erkannt (beachte auch die <a href="#syntax_line_separators">Zeilenseparatoren</a>)
&nbsp;<br>
</font></td></tr><tr valign="top"><td></td><td><font face="Arial" size="3" color="#000000"></font></td></tr></table><font face="Arial" size="3" color="#000000"><b><a name="modifier_s">s </b></font><font face="Times New Roman" size="4" color="#000000">
<br>
<table border="0" cellpadding="0" cellspacing="0"><tr valign="TOP"><td width="25"></td><td><font face="Times New Roman" size="4" color="#000000"></font></font><font face="Arial" size="3" color="#000000">Behandle den Zielstring als einzelne Zeile. Das bedeutet, dass "." jedes beliebige Zeichen findet, sogar Zeilenseparatoren (beachte auch <a href="#syntax_line_separators">Zeilenseparatoren</a>), die es normalerweise nicht findet. 
&nbsp;<br>
</font></td></tr><tr valign="top"><td></td><td><font face="Arial" size="3" color="#000000"></font></td></tr></table><font face="Arial" size="3" color="#000000"><b><a name="modifier_g">g </b></font><font face="Times New Roman" size="4" color="#000000">
<br>
<table border="0" cellpadding="0" cellspacing="0"><tr valign="TOP"><td width="25"></td><td><font face="Times New Roman" size="4" color="#000000"></font></font><font face="Arial" size="3" color="#000000">Modifikator f�r den "Gen�gsam"-Modus. Durch das Ausstellen werden alle folgenden Operatoren in den "Genugsam"-Modus. Standardmassig sind alle Operatoren "gierig". Wenn also der Modifikator /g aus ist, dann arbeitet '+' wie '+?', '*' als '*?' etc.
&nbsp;<br>
</font></td></tr><tr valign="top"><td></td><td><font face="Arial" size="3" color="#000000"></font></td></tr></table><font face="Arial" size="3" color="#000000"><b><a name="modifier_x">x</b></font><font face="Times New Roman" size="4" color="#000000"> 
<br>
<table border="0" cellpadding="0" cellspacing="0"><tr valign="TOP"><td width="25"></td><td><font face="Times New Roman" size="4" color="#000000"></font></font><font face="Arial" size="3" color="#000000">Erweitert die Lesbarkeit des Suchmusters durch Whitespace und Kommentare (beachte die Erkl�rung unten)</font><font face="Times New Roman" size="4" color="#000000">. 
&nbsp;<br>
</font></td></tr><tr valign="top"><td></td><td><font face="Times New Roman" size="4" color="#000000"></font></td></tr></table><font face="Times New Roman" size="4" color="#000000"></font><font face="Arial" size="3" color="#000000"><b><a name="modifier_r">r</b><font face="Arial" size="3" color="#800000"><b>
<br>
</b><table border="0" cellpadding="0" cellspacing="0"><tr valign="TOP"><td width="25"></td><td><font face="Arial" size="3" color="#800000"></font></font></font><font face="Arial" size="3" color="#000000">Modifikator. Falls er gesetzt ist, beinhaltet die Zeichenklasse �-� zus�tzliche russissche Buchstaben '�', �-� beinhaltet zus�tzlich '�', und �-� beinhaltet alle russischen Symbole.
&nbsp;<br>
</font></td></tr><tr valign="top"><td></td><td><font face="Arial" size="3" color="#000000">Sorry f�r fremdsprachliche Benutzer, er ist gesetzt standardm�ssig. Falls Du ihn ausgeschaltet haben willst standard�ssig, dann setze die globale Variable <a href="tregexpr_interface.htm#modifier_defs">RegExprModifierR</a> auf false.
&nbsp;<br>
</font></td></tr><tr valign="top"><td></td><td><font face="Arial" size="3" color="#000000">
&nbsp;<br>
</font></td></tr><tr valign="top"><td></td><td><font face="Arial" size="3" color="#000000"></font></td></tr></table><font face="Arial" size="3" color="#000000">
<br>
Der <a href="tregexpr_syntax.htm#modifier_x">Modifikator /x</a> selbst braucht etwas mehr Erkl�rung. Er sagt TRegExpr, dass er allen Whitespace ignorieren soll, der nicht escaped oder innerhalb einer Zeichenklasse ist. Du kannst ihn benutzen, um den regul�ren Ausdruck in kleinere, besser lesbare Teile zu zerlegen. Das Zeichen # wird nun ebenfalls als Metazeichen behandelt und leitet einen Kommentar bis zum Zeilenende ein. Beispiel:
<br>

<br>
<table border="0" cellpadding="0" cellspacing="0"><tr valign="TOP"><td width="19"></td><td><font face="Arial" size="3" color="#000000"></font></font><font face="Courier" size="3" color="#000000"><i>(&nbsp;
&nbsp;<br>
</i></font></td></tr><tr valign="top"><td></td><td><font face="Courier" size="3" color="#000000"><i>(abc)&nbsp;#&nbsp;Kommentar&nbsp;1
&nbsp;<br>
</i></font></td></tr><tr valign="top"><td></td><td><font face="Courier" size="3" color="#000000"><i>&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;#&nbsp;Du&nbsp;kannst&nbsp;Leerschl�ge&nbsp;zur&nbsp;Formatierung&nbsp;benutzen&nbsp;-&nbsp;TRegExpr&nbsp;ignoriert&nbsp;sie
&nbsp;<br>
</i></font></td></tr><tr valign="top"><td></td><td><font face="Courier" size="3" color="#000000"><i>(efg)&nbsp;#&nbsp;Kommentar&nbsp;2
&nbsp;<br>
</i></font></td></tr><tr valign="top"><td></td><td><font face="Courier" size="3" color="#000000"><i>)
&nbsp;<br>
</i></font></td></tr><tr valign="top"><td></td><td><font face="Courier" size="3" color="#000000"><i></i></font></td></tr></table><font face="Courier" size="3" color="#000000"></font><font face="Arial" size="3" color="#000000">
<br>
Dies bedeutet auch, wenn Du echten Whitespace oder das # im Suchmuster haben m�chtest (ausserhalb einer Zeichenklasse, wo sie unbehelligt von /x sind), dann muss der entweder escaped oder mit der hexadezimalen Schreibweise angegeben werden. Beides zusammen sorgt daf�r, dass regul�re Ausdr�cke besser lesbar werden. 
<br>

<br>

<br>
<font face="Arial" size="3" color="#0000FF"><b>Perl Erweiterungen
<br>
</b></font></font><font face="Arial" size="3" color="#000000">
<br>
<b><a name="inline_modifiers">(?imsxr-imsxr)</b></font><font face="Times New Roman" size="4" color="#000000">
<br>
</font><font face="Arial" size="3" color="#000000">Dies kann benutzt werden in Regul�ren Ausdr�cken, um Modifikatoren innerhalb eines Ausdruckes im Flug zu �ndern. Wenn dieses Konstrukt innerhalb eines Teilausdruckes erscheint, betriefft er auch nur diesen.</font><font face="Times New Roman" size="4" color="#000000">
<br>

<br>
</font><font face="Arial" size="3" color="#000000"><b>Beispiele:
<br>
</b></font><font face="Courier" size="3" color="#000000">&nbsp;&nbsp;(?i)Saint-Petersburg&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font face="Arial" size="3" color="#000000"><i>findet 'Saint-petersburg' und 'Saint-Petersburg'
<br>
</i></font><font face="Courier" size="3" color="#000000">&nbsp;&nbsp;(?i)Saint-(?-i)Petersburg&nbsp;&nbsp;</font><font face="Arial" size="3" color="#000000"><i>findet 'Saint-Petersburg', aber nicht 'Saint-petersburg'</i>
<br>
</font><font face="Courier" size="3" color="#000000">&nbsp;&nbsp;(?i)(Saint-)?Petersburg&nbsp;&nbsp;&nbsp;&nbsp;</font><font face="Arial" size="3" color="#000000"><i>findet 'Saint-petersburg' und 'saint-petersburg'</i>
<br>
</font><font face="Courier" size="3" color="#000000">&nbsp;&nbsp;((?i)Saint-)?Petersburg&nbsp;&nbsp;&nbsp;&nbsp;</font><font face="Arial" size="3" color="#000000"><i>findet 'saint-Petersburg', aber nicht 'saint-petersburg' 
<br>

<br>
</i></font><font face="Times New Roman" size="4" color="#000000">
<br>
</font><font face="Arial" size="3" color="#000000"><b><a name="inline_comment">(?#text)</b></font><font face="Times New Roman" size="4" color="#000000"> 
<br>
</font><font face="Arial" size="3" color="#000000">Ein Kommentar, der Text wird ignoriert. Beachte, dass TRegExpr den Kommentar abschliesst, sobald er eine ")" sieht. Es gibt also keine M�glichkeit, das Zeichen ")" im Kommentar zu haben. 
<br>

<br>

<br>
<font face="Arial" size="3" color="#0000FF"><b><a name="mechanism">Erkl�rung der internen Mechanismen</b></font></font><font face="Arial" size="3" color="#000000">
<br>

<br>
So, es scheint also, als m�chtest Du einige Geheimnisse der internen Mechanismen von TRegExpr erkl�rt bekommen? Nun, dieser Abschnitt ist im Aufbau - bitte sei etwas geduldig. Bis heute empfehle ich Dir die <a href="tregexpr_faq.htm">FAQ</a> (zu lesen, speziell zu den Fragen der Optimierungen beim <a href="tregexpr_faq.htm#nongreedyoptimization">"gen�gsamen" Modus</a>).
<br>
</font><font face="Times New Roman" size="4" color="#000000">
<br>
</font></font>

<small><table width="100%"><tr><td align="right"><a href="tregexpr_how_it_works.htm"><img src="1arrow4.gif" border="0"></a><a href="tregexpr_interface.htm"><img src="1arrow5.gif" border="0"></a></td></tr></small>

<script>     (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){                 (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),             m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)     })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');      ga('create', 'UA-90368520-1', 'auto');     ga('send', 'pageview');  </script>

</body></html>
