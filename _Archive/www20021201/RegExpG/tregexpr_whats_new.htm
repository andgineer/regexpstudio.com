<html><head><meta name="generator" content="Help & Manual 2.6.3"><title>Was gibt's Neues?</title></head>
<body background="niceblue.gif" bgcolor="#FFFFFF">
<small><table width="100%"><tr><td align="right"><a href="tregexpr_disclaimer.htm"><img src="1arrow4.gif" border="0"></a><a href="tregexpr_installation.htm"><img src="1arrow5.gif" border="0"></a></td></tr></small><table width="100%" border="0" cellspacing="0" cellpadding="3" bgcolor="#C6E7FF"><tr><td align="left">
<font face="Arial" size="4" color="#000000"><font face="Arial" size="4" color="#0000FF"><b>Was gibt's Neues?</b></font><font face="Arial" size="5" color="#000000"><font face="Arial" size="5" color="#0000FF"><b>
<br>
</b></font></font></font>

</td></tr></table><br>

<font face="Arial" size="3" color="#000000">Legende:
<br>
 (+) neues Feature
<br>
 (-) behobener Bug
<br>
 (^) erweiterte Implementation
<br>

<br>
&nbsp; v. 0.947 2001.10.03
<br>
<table border="0" cellpadding="0" cellspacing="0"><tr valign="top"><td width="14"><font face="Arial" size="3" color="#000000">�</font></td><td><font face="Arial" size="3" color="#000000">(+) <a href="tregexpr_syntax.htm#syntax_word_boundaries">Metazeichen (\b &amp; \B) f�r Wordgrenzen</a>
&nbsp;<br>
</font></td></tr><tr valign="top"><td><font face="Arial" size="3" color="#000000">�</font></td><td><font face="Arial" size="3" color="#000000">(-) Behebung eines Fehlers beim Verarbeiten von vordefinierten Zeichenklassen im Modus non-UseSetOfChar
&nbsp;<br>
</font></td></tr><tr valign="top"><td><font face="Arial" size="3" color="#000000">�</font></td><td><font face="Arial" size="3" color="#000000">(+) Spanische Hilfe - �bersetzt von Diego Calp (mail@diegocalp.com), Argentinien
&nbsp;<br>
</font></td></tr><tr valign="top"><td><font face="Arial" size="3" color="#000000">�</font></td><td><font face="Arial" size="3" color="#000000">(+) Neue <a href="tregexpr_interface.htm#tregexpr_version">Methode VersionMajor/Minor</a> der Klasse TRegExpr
&nbsp;<br>
</font></td></tr><tr valign="top"><td><font face="Arial" size="3" color="#000000">�</font></td><td><font face="Arial" size="3" color="#000000">(-) Fehlerbehebung in CompileRegExpr, Danke an Oleg Orlov (orlov@diasoft.ru)
&nbsp;<br>
</font></td></tr><tr valign="top"><td><font face="Arial" size="3" color="#000000">�</font></td><td><font face="Arial" size="3" color="#000000">(^) Die Methode RegExprSubExpressions war nicht kompatibel mit Delphi 2 &amp; 3. Danke an Eugene Tarasov f�r den Fehlerrapport
&nbsp;<br>
</font></td></tr><tr valign="top"><td><font face="Arial" size="3" color="#000000">�</font></td><td><font face="Arial" size="3" color="#000000">(+) <a href="tregexpr_interface.htm#tregexpr_replace">Die Methode Replace</a> kann nun auch selbst Ersetzungen durchf�hren. Danke an Warren Bare, Ken Friesen und viele andere, die diese Erweiterung w�nschten und vorschlugen.
&nbsp;<br>
</font></td></tr><tr valign="top"><td><font face="Arial" size="3" color="#000000">�</font></td><td><font face="Arial" size="3" color="#000000">(+) Aktualisierte Methode ReplaceRegExpr, so dass sie die neue Methode Replace benutzt.
&nbsp;<br>
</font></td></tr><tr valign="top"><td><font face="Arial" size="3" color="#000000">�</font></td><td><font face="Arial" size="3" color="#000000">(^) Die Kompatibilit�t zu Unicode ist wieder hergestellt. Sie ging in einer der fr�heren Versionen verloren. Danke an Stepfan Klimek f�r den Fehlerrapport.
&nbsp;<br>
</font></td></tr><tr valign="top"><td><font face="Arial" size="3" color="#000000">�</font></td><td><font face="Arial" size="3" color="#000000">(^) Aktualisiertes TestRE-Projekt, neue Beispiele f�r die neue Funktion Replace mit Ersetzungen
&nbsp;<br>
</font></td></tr><tr valign="top"><td><font face="Arial" size="3" color="#000000"></font></td><td></td></tr></table><font face="Arial" size="3" color="#000000">
<br>
 v. 0.942+ 2001.03.01
<br>
<table border="0" cellpadding="0" cellspacing="0"><tr valign="top"><td width="14"><font face="Arial" size="3" color="#000000">�</font></font></td><td><font face="Arial" size="3" color="#000000">(+) Published French help for TRegExpr, translated by Martin Ledoux, Quebec, Canada.
&nbsp;<br>
</font></td></tr><tr valign="top"><td><font face="Arial" size="3" color="#000000"></font></td><td></td></tr></table><font face="Arial" size="3" color="#000000">
<br>
v. 0.942 2001.02.12
<br>
<table border="0" cellpadding="0" cellspacing="0"><tr valign="top"><td width="14"><font face="Arial" size="3" color="#000000">�</font></font></td><td><font face="Arial" size="3" color="#000000">(-) Range-check error in DEMO-project (due to bug in RegExprSubExpressions), Thanks to Juergen Schroth
&nbsp;<br>
</font></td></tr><tr valign="top"><td><font face="Arial" size="3" color="#000000">�</font></td><td><font face="Arial" size="3" color="#000000">(^) RegExprSubExpressions - added error codes for "unclosed "[" error
&nbsp;<br>
</font></td></tr><tr valign="top"><td><font face="Arial" size="3" color="#000000">�</font></td><td><font face="Arial" size="3" color="#000000">(^) Help file bug fixing
&nbsp;<br>
</font></td></tr><tr valign="top"><td><font face="Arial" size="3" color="#000000"></font></td><td></td></tr></table><font face="Arial" size="3" color="#000000">
<br>
v. 0.941 2001.02.01
<br>
�&nbsp;&nbsp;&nbsp; (^) Achtung! Das Verhalten von \w und \w wurde geandert. Nun findet es wirklich alle alphanumerischen Zeichen und den Underscore '_', wie es in der Dokumentation beschrieben ist. Danke an Vadim Alexandrov. Wenn das bisherige Verhalten beibehalten werden soll, so muss die Zuweisung RegExprWordChars geandert werden: '0123456789' muss entfernt werden.
<br>
�&nbsp;&nbsp;&nbsp; (+) Der Modifikator /m ist nun vollstandig kompatibel mit den Empfehlungen auf unicode.org. Dies beinhaltet auch DOS-Stil Zeilenseparatoren \r\n gemischt mit dem UNIX-ublichen \n - beachte die Eigenschaften <a href="tregexpr_interface.htm#lineseparators">LineSeparators</a>, LinePairedSeparator
<br>
�&nbsp;&nbsp;&nbsp; (^) Achtung! Das Verhalten von '.' wurde geandert! Falls der <a href="tregexpr_syntax.htm#modifier_s">Modifikator /s</a> aus ist, findet es keine Zeichen aus <a href="tregexpr_syntax.htm#lineseparators">LineSeparators</a> und LinePairedSeparator (standardmassig \r und \n)
<br>
�&nbsp;&nbsp;&nbsp; (^) Achtung! Um die uberflussige Neuubersetzung eines regularen Ausdruckes zu vermeiden, veranlasst die Zuweisung eines regularen Audruckes oder das Andern eines Modifikators keine automatische Ubersetzung mehr. Somit ergibt sich hierbei keine Exception mehr beim Zuweisen eines fehlerhaften Ausdruckes. Diesbezugliche Exceptions tauchen dann (erst) auf bei Exec[Next], Substitute, Dump etc.
<br>
�&nbsp;&nbsp;&nbsp; (+) Der genugsame (d.h. minimaler statt maximaler Match) Stil der der <a href="tregexpr_syntax.htm#metacharacters_iterators">Iteratoren</a> (wie '*?'), Modifikator /g.  Implementiert mit der Hilfe von Matthew Winter und Filip Jirs�k
<br>
�&nbsp;&nbsp;&nbsp; (+) <a href="tregexpr_syntax.htm#modifier_x">Modifikator /x</a> (eXtended syntax - erlaubt das Formatieren eines regularen Ausdruckes)
<br>
�&nbsp;&nbsp;&nbsp; (+) Eine Prozedur Compile, um einen regularen Ausdruck (neu) zu ubersetzen. Nutzlich fur das GUI eines regularen Ausdruck-Editors oder ahnliches, zum Beispiel um die Gultigkeit aller Eigenschaften des Ausdruckes zu prufen.
<br>
�&nbsp;&nbsp;&nbsp; (+) Es gibt eine <a href="tregexpr_faq.htm">FAQ</a> in der Dokumentation. Ich bin zu faul, um die immer gleichen Fragen immer wieder zu beantworten.:( Bitte lest die FAQ, bevor Ihr mir Fragen sendet!
<br>
�&nbsp;&nbsp;&nbsp; (^) Das <a href="tregexpr_testrexp.htm">DEMO Projekt</a> wurde bedeutend erweitert: Nun ist es ein regelrechter Debugger fur regulare Ausdrucke! Danke an Jon Smith fur seine Ideen.
<br>
�&nbsp;&nbsp;&nbsp; (+) Funktion RegExprSubExpressions, auch wieder nutzlich fur GUI Editoren. Beachte das Beispiel im Projekt TestRExp.dpr
<br>
�&nbsp;&nbsp;&nbsp; (+) Eine <a href="tregexpr_decorator.htm">HyperLinkDecorator</a> Unit - ein praktisches Beispiel zum Gebrauch von TRegExpr  (beachte die Beschreibung in der Hilfe-Datei)
<br>
�&nbsp;&nbsp;&nbsp; (-) Range checking Error in seltenen Fallen, wenn ComplexBraces definiert ist  Danke an Jurgen Schroth
<br>
�&nbsp;&nbsp;&nbsp; (^) 'ComplexBraces' ist nun standardmassig definiert
<br>
�&nbsp;&nbsp;&nbsp; (+) Kit Eason sandte mir viele Beispiele fur den Abschnitt "<a href="tregexpr_syntax.htm">Syntax</a>" in der Hilfe
<br>
�&nbsp;&nbsp;&nbsp; (+) The \A and \Z metacharacters are just like "^'' and "$'', except that they won't match multiple times when the <a href="tregexpr_syntax.htm#modifier_m">modifier /m</a> is used
<br>

<br>
 v. 0.938 2000.07.23
<br>
�&nbsp;&nbsp;&nbsp; (^) Ausnahmen springen nun auf eine geeignetere Quellcode-Zeile und nicht mehr in die Fehlerbehandlungsroutine (Ich bin nicht sicher, ob das sicher ist f�r alle Compiler-Versionen. Bitte, lasst mich alle Probleme wissen, die dies eventuell verursacht). Du kannst das ausschalten - Entferne die reRealExceptionAddr Definition aus regexpr.pas).
<br>
�&nbsp;&nbsp;&nbsp; (^) Vergessen gegangenes BSUBEXP[CI] in FillFirstCharSet verursachte eine Ausnahme 'memory corruption' in jedem Fall, wo eine R�ckw�rtsreferenz der erste Opcode ist wie beispielsweise: (a)*\1 (der erste Teilausdruck kann �bersprungen werden und wir beginnen die Suche mit der R�ckw�rtsreferenz.).
<br>

<br>
 v. 0.937 2000.06.12
<br>
�&nbsp;&nbsp;&nbsp; (-) Ein Fehler im Optimierungskern (seit v.0.934). In seltenen F�llen erwischte TRegExpr die rechten Teilstrings nicht mehr. Danke Matthias Fichtner
<br>

<br>
 v. 0.936 2000.04.22
<br>
�&nbsp;&nbsp;&nbsp; (+) R�ckw�rtsreferenzen wie in '&lt;font size=(['"]?)(\d+)\1&gt;' Beachte dazu die <a href="tregexpr_syntax.htm">Syntax Beschreibung</a>
<br>
�&nbsp;&nbsp;&nbsp; (+) Unterst�tzung der hexadezimalen Eingabe von breiten Zeichen wie '\x{263a}'
<br>

<br>
 v. 0.935 2000.04.19 (von Yury Finkel)
<br>
�&nbsp;&nbsp;&nbsp; (-) fInvertCase ist nun nicht mehr readonly ;)
<br>
�&nbsp;&nbsp;&nbsp; (-) Compiler-Fehlermeldungen beim Unicode-Modus
<br>

<br>
 v. 0.934 2000.04.17
<br>
�&nbsp;&nbsp;&nbsp; (^) Neue Implementierung von Bereichen (Das Bereiche-Erkennen ist nun sehr schnell - es ben�tzt nur einen einzigen(!) CPU-Befehl)
<br>
�&nbsp;&nbsp;&nbsp; (^) Die interne Struktur der P-Codes wurde konvertiert nach 32 Bits - dies arbeitet schneller und entfernt die 64K Limite f�r �bersetzte Regul�re Ausdr�cke.
<br>
�&nbsp;&nbsp;&nbsp; (^)'{m,n}' ben�tzt nun 32-Bit Argumente (bis zu 2147483646) - speziell f�r Dmitry Veprintsev ;)
<br>
�&nbsp;&nbsp;&nbsp; (^) Bereiche unterst�tzen nun Metazeichen: [\n-\x0D] -&gt; #10,#11,#12,#13; Ge�nderte Verarbeitung des '-', es ist nun wie in Perl: [\d-t] -&gt; '0'..'9','-','t'; []-a] -&gt; ']'..'a'
<br>
�&nbsp;&nbsp;&nbsp; (-) Fehler mit \t und etc Macro (sie arbeiteten nur in Bereichen) Danke Yury Finkel
<br>
�&nbsp;&nbsp;&nbsp; (^) Eine neue vorbereitende Optimierung ist hinzugef�gt. (Beachte FirstCharSet). Unglaublich schnell(!). Sei bitte vorsichtig, es ist nicht vollst�ndig getestet. Du kannst das ausschalten - entferne die UseFirstCharSet Definition.
<br>
�&nbsp;&nbsp;&nbsp; (^) Unz�hlige Geschwindigkeitsoptimierungen
<br>
�&nbsp;&nbsp;&nbsp; (-) Der Schreibweisen-unabh�ngige Modus unterst�tzt nun im System definierte, nationale Zeichens�tze (Grund daf�r war ein Fehler in v.0.90 .. 0.926, es wurden nur englische Zeichens�tze unterst�tzt)
<br>
�&nbsp;&nbsp;&nbsp; (^) Der Schreibweisen-unabh�ngige Modus ist nun implementiert mit InvertCase (Parameters &amp; Resultat von REChar type) - dies arbeitet 10 .. 100 mal schneller.
<br>
�&nbsp;&nbsp;&nbsp; (^) Match und ExecNext Interfaces optimiert, IsProgrammOk hinzugef�gt dank Ralf Junker
<br>
�&nbsp;&nbsp;&nbsp; (^) Die maximale Anzahl der Unterausdr�cke wurde erh�ht (NSUBEXP, nun 15) und der Code daf�r wurde korrigiert, nun kannst Du selbst einfach die Konstante NSUBEXP erh�hen. Vorgeschlagen von Alexander V. Akimov.
<br>
�&nbsp;&nbsp;&nbsp; (^+) Ersatz f�r NSUBEXP &gt; 10 angepasst und betr�chtlich(!) optimiert, verbesserte Fehlerpr�fung.  ACHTUNG! Lies die neue Platzhalten-Beschreibung - Die Syntax wurde ge�ndert!
<br>
�&nbsp;&nbsp;&nbsp; (+) SpaceChars &amp; WordChars Eigenschaft - nun kannst Du festlegen, welche Zeichen als \s &amp; \w behandelt werden. Als Vorgabe ist zugewiesen RegExprSpaceChars/WordChars
<br>
�&nbsp;&nbsp;&nbsp; (+) Nun funktionieren \s and \w in Bereichen
<br>
�&nbsp;&nbsp;&nbsp; (-) Unendliche Schleife bei End-Of-Range =#$FF. Danke Andrey Kolegov
<br>
�&nbsp;&nbsp;&nbsp; (+) Funktion QuoteRegExprMetaChars (beachte Beschreibung)
<br>
�&nbsp;&nbsp;&nbsp; (+) UniCode Unterst�tzung - Sorry, arbeitet leider nur SEHR langsam (entferne '.' aus der Definition {.$DEFINE UniCode} in regexpr.pas, wenn Du die Unicode Version �bersetzen m�chtest). Implementiert von Yury Finkel
<br>

<br>
 v. 0.926 2000.02.26
<br>
�&nbsp;&nbsp;&nbsp; (-) Ein alter Fehler noch aus den Quellen von H.Spencer - SPSTART wurde gesetzt f�r '?' und '*' anstelle von '*', '{m,n}' und '+'.
<br>
�&nbsp;&nbsp;&nbsp; (-^) Nun arbeitet {m,n} wie in Perl - ein Fehler tritt nur auf, wenn m &gt; n oder n &gt; BracesMax (BracesMax = 255 in dieser Version). In anderen F�llen (kein m oder nondigit Symbol in m oder n Werten,  oder kein '}'), wird das Symbol '{' �bersetzt als Literal.  Beachte: Du musst nun also den m-Wert angeben: also {0,n} statt {,n}).  Beachte: {m,} wird �bersetzt als {m,BracesMax}.
<br>
�&nbsp;&nbsp;&nbsp; (-^) Der Schreibweisen-unabh�ngige Modus unterst�tzt nun Bereiche '(?i)[a]' == '[aA]'
<br>
�&nbsp;&nbsp;&nbsp; (^) Ein Template f�r r�mische Zahlen in TestRexp ;)
<br>
�&nbsp;&nbsp;&nbsp; (+^) Beta Version f�r komplexe Ausdr�cke mit geschweiften Klammern wie ((abc){1,2}|d){3} Ausgeschaltet als Vorgabe. Wenn Du gerne am Beta-Test teilnehmen w�rdest, entferne '.' aus  {.$DEFINE ComplexBraces} in regexpr.pas.
<br>
�&nbsp;&nbsp;&nbsp; (-^) Das \b Metazeichen wurde entfernt (in Perl ist es nicht BS wie in meiner Implementation, sondern es bezeichnet eine Wortgrenze)
<br>
�&nbsp;&nbsp;&nbsp; (+) Der /s Modifikator. Aber ich bin nicht sicher, ob das ok ist in Windows. Ich implementierte es als [^\n] ff�r das '.' Metazeichen im Non-/s Modus. Obwohl die Zeilen unter Windows getrennt sind durch \n\r. Ich brauche Eure Vorschl�ge!
<br>
�&nbsp;&nbsp;&nbsp; (^) Sorry, aber ich musste Modifiers in ModifierStr umbenennen (ModifierS wird nun f�r /s gebraucht)
<br>

<br>
 v. 0.91 2000.02.02
<br>
�&nbsp;&nbsp;&nbsp; (^) Einige �nderungen in der Dokumentation und im Demo-Projekt.
<br>

<br>
 v. 0.90 2000.02.01
<br>
<table border="0" cellpadding="0" cellspacing="0"><tr valign="top"><td width="14"><font face="Arial" size="3" color="#000000">�</font></font></td><td><font face="Arial" size="3" color="#000000">(+) Implementiert sind nun Trefferz�hler, angegeben mit geschweiften Klammern {min,max}. Sorry - erst einfache F�lle - wie '\d{2,3}' or '[a-z1-9]{,7}', aber nicht (abc){2,3} .. I immer noch zuwenig Zeit. Warte auf eine k�nftige Version von TRegExpr oder implementiere es selbst und teile es mit mir  ;)
&nbsp;<br>
</font></td></tr><tr valign="top"><td><font face="Arial" size="3" color="#000000"></font></td><td></td></tr></table><font face="Arial" size="3" color="#000000">�&nbsp;&nbsp;&nbsp; (+) Implementiert sind Modifikatoren f�r der Schreibweisen-unabh�ngige Modus und andere Modifikatoren - beachte die Eigenschaften Modifiers, ModifierR, ModifierI und <a href="tregexpr_syntax.htm#inline_modifiers">(?ismxr-ismxr)</a>Perl Erweiterungen. Du kannst die globalen Variablen <a href="tregexpr_interface.htm#modifier_defs">RegExpr*</a> benutzen, um Vorgabewerte zuzuweisen.
<br>
�&nbsp;&nbsp;&nbsp; (+) Eigenschaft ExtSyntaxEnabled ist ge�ndert in den 'r'-Modifikator (Russische Erweiterung - <a href="tregexpr_syntax.htm#modifier_r">beachte die Dokumentation</a>)
<br>
�&nbsp;&nbsp;&nbsp; (+) Implementiert die <a href="tregexpr_syntax.htm#inline_comment">(?#comment)</a>Perl-Erweiterung - sehr harte und n�tzliche Arbeit ;)
<br>
�&nbsp;&nbsp;&nbsp; (^) Die Eigenschaft MatchCount wurde umbenannt in <a href="tregexpr_interface.htm#subexprmatchcount">SubExprMatchCount</a>. Sorry f�r eventuelle Unannehmlichkeiten, aber es geschah, weil die neue Version leicht anders arbeitet. Wenn Du MatchCount in Deinem Programmen verwendest, dann musst Du leider umdenken! (Beachte den Kommentar zu dieser Eigenschaft)
<br>
�&nbsp;&nbsp;&nbsp; (+) Die InputString Eigenschaft hinzugef�gt - sie speichert den Input-String vom letzten Aufruf von Exec. Du kannst dieser Eigenschaft direkt neue Werte zuweisen f�r den Gebrauch durch die ExecPos-Methode.
<br>
�&nbsp;&nbsp;&nbsp; (+) Die Methode ExecPos hinzugef�gt - um mit dem zugewiesenen InputString zu arbeiten. Du kannst es folgendermassen benutzen InputString := AString; ExecPos; oder so InputString := AString; ExecPos (AOffset); Beachte: ExecPos ohne Parameter arbeitet nur in Delphi 4 oder h�her.
<br>
�&nbsp;&nbsp;&nbsp; (+) Methode ExecNext hinzugef�gt - ein einfacher und schneller(!) Weg, um mehrfaches Auftreten von Regul�ren Ausdr�cken in grossen InputStrings zu finden.
<br>
�&nbsp;&nbsp;&nbsp; (^) Der Offset-Parameter von der Exec-Methode wurde entfernt. Falls Du das brauchst in Deinem Programm, ersetze bitte alle Exec (AString, AOffset) durch die Kombination InputString := AString; ExecPos (AOffset) Sorry f�r eventuelle Unannehmlichkeiten, aber das alte Design (0.81) war zu umst�ndlich :( Zus�tzlich erzeugten mehrfache Aufrufe von Exec mit demselben InputString einen unsinnigen Verwaltungsaufwand, weil jeder Exec-Auruf einen neuen String-Buffer anlegte.
<br>
�&nbsp;&nbsp;&nbsp; (^) Optimierte Implementation von Platzhalten, Replace und Split Methoden
<br>
�&nbsp;&nbsp;&nbsp; (-) Ein kleinerer Bug behoben - wenn die �bersetzung eines Regul�ren Ausdruckes einen Fehler erzeugte im zweiten Durchlauf (!!! obwohl ich denke, dass dies in der Realit�t wohl kaum m�glich ist), blieb TRegExpr im 'compiled' Zustand.
<br>
�&nbsp;&nbsp;&nbsp; (-) Fehler behoben - Die Dump-Methode pr�fte nicht, ob das Opcode-Programm existiert, und erzeugte eine Access Violation, falls der vorherige Aufruf von Exec mit einem Fehler beendet wurde.
<br>
�&nbsp;&nbsp;&nbsp; (+) Die Fehlerbehandlung wurde ge�ndert (beachte die Funktionen Error, ErrorMsg, LastError, die Eigenschaft CompilerErrorPos, und den Typ ERegExpr).
<br>
�&nbsp;&nbsp;&nbsp; (-^) TRegExpr.Replace, Split und ExecNext gerieten in eine unendliche Schleife, wenn der Regul�re Ausdruck einen leeren String durchsuchen sollte. Nun bewegt sich  ExecNext um MatchLen weiter, wenn MatchLen &lt;&gt; 0  und um +1 wenn MatchLen = 0. Danke Jon Smith und George Tasker f�r die Fehlerbeschreibung.
<br>
�&nbsp;&nbsp;&nbsp; (-) W�hrend des Spielens mit Null-Matches, entdeckte ich, dass Null-Matches am Ende des InputStrings nie gefunden wurden. Nun, ich habe das korrigiert, aber ich bin nicht sicher, ob das eine sichere Variante ist (MatchPos[0]=length(AInputString)+1, MatchLen = 0). Andere Vorschl�ge sind h�chst willkommen.
<br>
�&nbsp;&nbsp;&nbsp; (^) Das Demo-Projekt und die Dokumentation wurden erweitert
<br>
�&nbsp;&nbsp;&nbsp; (^) Die Dokumentation und diese Version sind nun ver�ffentlicht auf meiner Homepage <a href="http://anso.da.ru" TARGET="_top">http://anso.da.ru</A> (http://anso.virtualave.net)
<br>

<br>
 v. 0.81 1999.12.25 // Fr�hliche Weihnachten! :)
<br>
 -=- \s (AnySpace) und \S (NotSpace) Metazeichen hinzugef�gt
<br>
     - implementiert von Stephan Klimek sowie weitere kleinere Korrekturen von AVS
<br>
 -=- \f, \a und \b Metazeichen hinzugef�gt (stehen f�r FF, BEL, BS)
<br>
 -=- Metazeichen '�' &amp; '�' entfernt - Sorry f�r eventuelle Unannehmlichkeiten
<br>
 -=- Match-Eigenschaft hinzugef�gt (== copy (InputStr, MatchPos [Idx], MatchLen [Idx]))
<br>
 -=- Weiterer Parameter Offset zur Exec-Methode hinzugef�gt.
<br>
     (Danke Steve Mudford)
<br>

<br>
 v. 0.7 1999.08.22
<br>
 -=- Fehler behoben - in einigen F�llen arbeitete der Regul�re Ausdruck [^...]
<br>
     falsch (interpretierte den Ausdruck wie irgendein beliebiges Zeichen)
<br>
     (Danke Jan Korycan)
<br>
 -=- Einige �nderungen und Verbesserungen in TestRExp.dpr
<br>

<br>
 v. 0.6 1999.08.13 (Friday 13 !)
<br>
 -=- Header von TRegExpr.Substitute ge�ndert
<br>
 -=- Geeignete globale Wrappers f�r Split, Replace &amp; andere erzeugt (Danke Stephan Klimek f�r die Vorschl�ge)
<br>

<br>
 v. 0.5 1999.08.12
<br>
 -=- TRegExpr.Substitute-Routine hinzugef�gt
<br>
 -=- Einige �nderungen und Verbesserungen TestRExp.dpr
<br>
 -=- Fehler behoben in der englischen Version der Dokumentation
<br>
     (Danke Jon Buckheit)
<br>

<br>
 v. 0.4 1999.07.20
<br>
 -=- Fehler behoben beim Parsen von Strings, die l�nger als 255 Bytes sind
<br>
     (Danke Guido Muehlwitz)
<br>
 -=- Fehler in RegMatch behoben - fand nur das erste Auftreten eines Regul�ren Ausdruckes.
<br>
     (Danke Stephan Klimek)
<br>

<br>
 v. 0.3 1999.06.13
<br>
 -=- ExecRegExpr Funktion
<br>

<br>
 v. 0.2 1999.06.10
<br>
 -=- Eingepackt in eine Object-Pascal-Klasse
<br>
 -=- Code leicht angepasst f�r Pascal
<br>
 -=- Nun f�hrt der Makro korrekt weiter in Bereichen
<br>
 -=- Bereiche der Regul�ren Ausdr�cke wurden erweitert um russische Zeichenbereiche:
<br>
     �-&nbsp; - ersetzt alle kleinen russischen Zeichen (Win1251)
<br>
     L-- - ersetzt alle grossen russischen Zeichen (Win1251)
<br>
     �-- - ersetzt alle russischen Zeichen (Win1251)
<br>
 -=- Macro '\d' (Opcode ANYDIGIT) hinzugef�gt - findet eine Ziffer
<br>
 -=- Macro '\D' (Opcode NOTDIGIT) hinzugef�gt - findet eine Nicht-Ziffer
<br>
 -=- Macro '\w' (Opcode ANYLETTER) hinzugef�gt - findet einen englischen Buchstaben oder '_'
<br>
 -=- Macro '\W' (Opcode NOTLETTER) hinzugef�gt - findet einen nicht-englischen Buchstaben oder '_'
<br>
 (Alle diese Erweiterungen der Regul�ren Ausdr�cke k�nnen abgeschaltet werden durch das Flag ExtSyntax)
<br>

<br>
 v. 0.1 1999.06.09
<br>
 Erste Version, mit Fehlern, ohne Hilfe =&gt; wird wohl sterben, das Ganze  :(
<br>

<br>
</font></font>

<small><table width="100%"><tr><td align="right"><a href="tregexpr_disclaimer.htm"><img src="1arrow4.gif" border="0"></a><a href="tregexpr_installation.htm"><img src="1arrow5.gif" border="0"></a></td></tr></small>

<script>     (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){                 (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),             m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)     })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');      ga('create', 'UA-90368520-1', 'auto');     ga('send', 'pageview');  </script>

</body></html>
